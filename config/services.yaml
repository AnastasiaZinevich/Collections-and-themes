# config/services.yaml
services:
   
    Cloudinary\Cloudinary:
        arguments:
            $config: '%env(CLOUDINARY_URL)%'

   
    Symfony\Component\Security\Core\Encoder\UserPasswordEncoderInterface: '@security.password_encoder'
    Symfony\Component\HttpFoundation\Session\SessionInterface: '@session'
    App\Controller\LanguageController:
        arguments:
            $session: '@Symfony\Component\HttpFoundation\Session\SessionInterface'

    App\Controller\SecurityController:
        arguments:
            $passwordEncoder: '@Symfony\Component\Security\Core\Encoder\UserPasswordEncoderInterface'

    App\Controller\CollectionController:
        arguments:
            $session: '@Symfony\Component\HttpFoundation\Session\SessionInterface'

    App\Controller\ItemController:
        arguments:
            $session: '@Symfony\Component\HttpFoundation\Session\SessionInterface'

    # Default configuration for services
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # Make classes in src/ available to be used as services
    # This creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # Explicitly define the alias for the Cloudinary service
    cloudinary:
        alias: 'Cloudinary\Cloudinary'

    Elasticsearch\Client:
        class: Elasticsearch\ClientBuilder
        factory: ['Elasticsearch\ClientBuilder', 'create']
        arguments: ['{"hosts": ["localhost:8000"]}',]
